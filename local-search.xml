<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在校生学习，应届生找工作，必读</title>
    <link href="undefined2019/11/07/%E5%9C%A8%E6%A0%A1%E7%94%9F%E5%AD%A6%E4%B9%A0%EF%BC%8C%E5%BA%94%E5%B1%8A%E7%94%9F%E6%89%BE%E5%B7%A5%E4%BD%9C%EF%BC%8C%E5%BF%85%E8%AF%BB/"/>
    <url>2019/11/07/%E5%9C%A8%E6%A0%A1%E7%94%9F%E5%AD%A6%E4%B9%A0%EF%BC%8C%E5%BA%94%E5%B1%8A%E7%94%9F%E6%89%BE%E5%B7%A5%E4%BD%9C%EF%BC%8C%E5%BF%85%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<p>Hello,大家好,今天与大家分享一段经历。本篇文章适合于即将毕业正在找工作的应届生,以及在校的大学生阅读。</p><p>我毕业于2019年6月，2018.6 - 2019.8在天津实习一年，2019年9月来到杭州找工作，折腾了一个多月最近总算是稳定下来了，在这里与大家分享其中坎坷，主要是我个人思想认知的转变，以及假如让我从头再来我会如何选择，希望能给你带来帮助。</p><h1 id="一、我的个人经历"><a href="#一、我的个人经历" class="headerlink" title="一、我的个人经历"></a>一、我的个人经历</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/20191107/a_01.jpg" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>回想自己的大学期间，学习状况也正可谓是豹头、猪肚、凤尾。刚上大学初次接触到编程，那时候学的是C语言，感觉挺有意思的，一个个算法做出来心里有种说不出的小骄傲，学习劲头也足。更重要的是我的C语言老师是一个特别好玩的老头，他可以将C语言当一门艺术来讲，这使我有了一个好的入门，之后也由他带我们学习C#面向对象，效果非常好，这是大一时期的状况。</p><p>后来从大二就开始了很长一段时间处于迷茫，由于自己的无知，没有明确的目标和学习规划，根本不知道从网上寻找学习资源，家境原因报名培训更是想都没想过，这段时间处于浑浑噩噩。并不是每天吃喝玩乐，也还是在一直学习，但是非常乱，有劲使不上，明明知道现在这种状态出去根本是不可能工作的，但却不知道该在哪方面该下功夫，学校课堂内容基本都属于最基础的。</p><p>真是太难了！<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191107/a_02.jpg" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>另一个阶段在即将面临实习的那个学期，很幸运地遇到一位老师，当然她自己家也开了少儿编程公司。新学期一开始上课，她就给我们讲述了学习方向与路线，当时有种顿悟的感觉。感觉自己差的太多，如果早知如此也不会在之前浪费那么多时间做无用功，关系较好的几个同学也有同感，于是一群魔鬼开始了疯狂地学习，一起奋战。学习资源主要为“<a href="http://yun.itheima.com/" target="_blank" rel="noopener">传智播客</a>”网上的免费教学资料。因为要知道半年之后就要面临找工作了。不过学期末一起奋战的小伙伴都找到了实习岗位，公司的开发团队都不大0-20人。我当时开始魔鬼学习是在3月中旬，而实习上岗是在6月20，当时心里感觉还是棒棒的，所以称它凤尾。</p><p>我所实习的公司，开发团队不大，所以公司的要求是Java全栈，也正是因为这样在实习阶段我接触过前端如Vue、后端，时不时也做做UI，收获很丰富，刚实习就可以看到一个项目从无到有完整的过程，也感谢那家公司给了我学习的机会。但是后来可能因为是成长的原因，发现自己所处团队，工作并不是很规范，但是自己也并不知道什么是对与错，无法提出合理建议。于是思考，杭州的软件行业在国内也是名列前茅的，这才转战杭州，意于学习更多知识。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191107/a_03.jpg" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>2019.09.16来到杭州，开始找工作，因为实习期也学习了很多东西，刚开始还是挺自信的。我一直在Boss直聘上投的简历，从找工作到上岗前后用了有一个多月，共面试有八家左右，中途还有一家上岗三天，发现所用技术陈旧所以辞退，其中也有几家面试才了解到，其公司只是刚想创建Java开发团队。整个过程并不是很顺利，最后上岗的公司开发团队虽然不大，但是分工很细，工作也比较规范，还有好几个技术前辈做支撑，感觉还可以，是个容身之地。</p><p>静下心想想，有一个普遍问题：找我面试的公司开发团队规模都不大，为什么大公司不找我面试呢？找工作期间才了解到，大公司招员工，一方面是在校应届生通过校招招聘，二是工作三年以上已经拥有丰富的工作经验的社招。而我恰恰是毕业生的身份，有点为难。</p><h1 id="二、假如可以重头再来"><a href="#二、假如可以重头再来" class="headerlink" title="二、假如可以重头再来"></a>二、假如可以重头再来</h1><p> 假如让我重头再来，我会规划如下，以Java学习为例，如果你觉得合适可以采纳。</p><p>先定目标，分析互联网大公司与小公司的区别，之前我在哔哩哔哩上看了<a href="https://search.bilibili.com/all?keyword=%E7%A8%8B%E5%BA%8F%E7%BE%8A&from_source=banner_search" target="_blank" rel="noopener">程序羊</a>前辈的分享了解如下。</p><ul><li><p>小公司的原则是用最少人员发挥最大的力量，所以会要求你所会的东西范围广，如果你想学习更广泛的东西可以选择去小公司实习，就比如一个项目历经市场调研、业务需求分析、数据库设计、前端、后端、部署上线等，但是每个环结可能不是那么规范。</p></li><li><p>大公司对于校招进公司的应届生，等到他们毕业后上岗会进行全面培训，也会有专业领域的大佬给他们讲述，当然大公司的开发规范一定是沉淀了许久定下来的。</p></li></ul><p>如果让我重新选择，我会定大厂为目标，因为我自己认为先遵循一套好规范更加重要，领域方面可以稍稍延迟，以后再研究。BAT去不了，选择京东、美团、哈罗那些大的互联网公司也可以。</p><p>我会在毕业的前一年的6月份开始就寻找合适的公司，当然有各别公司比较超前也要留意，先是通过网申或宣讲会，宣讲会也可以去别的学校参加，有以下寻找方式</p><ul><li>通过公司官网，点击校招按流程操作，有朋友内推更好</li><li>海投网、看准网，可以查看500强校招和每日宣讲动向</li><li>如果有机会，也可以跟着学校走，有校招群等机会</li></ul><p>假若真的是技术比较薄弱，没有应聘到一家大公司，再去Boss直聘、拉勾这些招聘网站上，刚开始也还是把目标放在相对大一点的公司。</p><h2 id="“面试造飞机，工作拧螺丝”，那就需要学习知道如何造飞机"><a href="#“面试造飞机，工作拧螺丝”，那就需要学习知道如何造飞机" class="headerlink" title="“面试造飞机，工作拧螺丝”，那就需要学习知道如何造飞机"></a>“面试造飞机，工作拧螺丝”，那就需要学习知道如何造飞机</h2><p>我觉得大一时期可以重蹈覆辙。</p><p>然后从那段浑浑噩噩的时间开始，学习Java技术包括框架等，另一方面练习数据结构与算法，如果有时间且有能力研究开源项目更好，学习成长记录在个人的技术博客上。技术博客在面试大厂，也是加分项。这样不仅充实，而且时间也不会仓促。</p><p>我的技术博客：<a href="https://guaidonggua.club/" target="_blank" rel="noopener">https://guaidonggua.club/</a></p><p>程序羊前辈也讲到，去大厂面试重视两点，一是语言，在这里就是Java语言，另一方面就是数据结构与算法。大公司是非常重视算法的，有的公司甚至是要求：语言不会都可以，算法一定要优秀。</p><p>你可以在力扣网，练习算法：<a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a></p><p>下面是一张<a href="https://www.bjsxt.com/javashipin.html" target="_blank" rel="noopener">尚学堂的学习路线图</a>，这个比较全面，不过有些内容是可以先放一放，你也可以去其它教育网站查找，比如百度搜索：传智播客、堂硅谷、堂学尚等，哔哩哔哩上更是集中了各大平台教学视频，它们的官网上都是有免费的教学资源的。而且我觉得如果你可以自我控制，没有必要报名培训机构。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191107/a_04.jpg" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>这就是目前我对以前经历的总结，希望可以给你带来帮助。<br>谢谢阅读！</p>]]></content>
    
    
    
    <tags>
      
      <tag>成长历程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot+MyBatis+MySQL多数据源搭建</title>
    <link href="undefined2019/10/27/SpringBoot-MyBatis-MySQL%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E6%90%AD%E5%BB%BA/"/>
    <url>2019/10/27/SpringBoot-MyBatis-MySQL%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>平时可能有需求需要一个项目中访问多个数据源。以下是搭建多数据源的一个简单方案。</p><h1 id="一、案例环境"><a href="#一、案例环境" class="headerlink" title="一、案例环境"></a>一、案例环境</h1><p>SpringBoot、MyBatis、MySQL；<br>下面是两个数据库school与school2，两个数据库中分别都有一个teacher表，但是数据不同，我们就来操作这两个数据库。如下<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="二、SpringBoot项目搭建"><a href="#二、SpringBoot项目搭建" class="headerlink" title="二、SpringBoot项目搭建"></a>二、SpringBoot项目搭建</h1><h2 id="2-1-Maven依赖"><a href="#2-1-Maven依赖" class="headerlink" title="2.1 Maven依赖"></a>2.1 Maven依赖</h2><p>都是最基础的，如果你要用到Generator生成lombox工程，你可以看上篇文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">     &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">    &lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure><h2 id="2-2-配置文件"><a href="#2-2-配置文件" class="headerlink" title="2.2 配置文件"></a>2.2 配置文件</h2><p>我这里是application.yml格式，其它properties都是一样的。先展示一下我的文档结构，其中练习较杂，只看标注的即可。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>下面是数据库配置，密码和账户非真，虚拟的。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  datasource:</span></span><br><span class="line"><span class="attr">    test1:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:mysql://47.113.122.168:3306/school?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">guaidonggua..</span></span><br><span class="line"><span class="attr">    test2:</span></span><br><span class="line"><span class="attr">      driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">      jdbc-url:</span> <span class="attr">jdbc:mysql://47.113.122.168:3306/school2?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;serverTimezone=UTC</span></span><br><span class="line"><span class="attr">      username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">      password:</span> <span class="string">guaidonggua..</span></span><br></pre></td></tr></table></figure><h2 id="2-3-构建Mapper"><a href="#2-3-构建Mapper" class="headerlink" title="2.3 构建Mapper"></a>2.3 构建Mapper</h2><p>我这里直接使用Generator生成两次，分别是两个数据库的Mapper类和配置文件。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>下面象征性地展示数据源1的代码。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span> <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.aiahtb.mapper.data1.Teacher1Mapper"</span>&gt;</span><br><span class="line">  &lt;resultMap id=<span class="string">"BaseResultMap"</span> type=<span class="string">"com.aiahtb.entity.Teacher"</span>&gt;</span><br><span class="line">    &lt;id column=<span class="string">"tid"</span> jdbcType=<span class="string">"INTEGER"</span> property=<span class="string">"tid"</span> /&gt;</span><br><span class="line">    &lt;result column=<span class="string">"name"</span> jdbcType=<span class="string">"VARCHAR"</span> property=<span class="string">"name"</span> /&gt;</span><br><span class="line">    &lt;result column=<span class="string">"age"</span> jdbcType=<span class="string">"INTEGER"</span> property=<span class="string">"age"</span> /&gt;</span><br><span class="line">    &lt;result column=<span class="string">"creat_time"</span> jdbcType=<span class="string">"TIMESTAMP"</span> property=<span class="string">"creatTime"</span> /&gt;</span><br><span class="line">    &lt;result column=<span class="string">"update_time"</span> jdbcType=<span class="string">"TIMESTAMP"</span> property=<span class="string">"updateTime"</span> /&gt;</span><br><span class="line">  &lt;/resultMap&gt;</span><br><span class="line">  &lt;delete id=<span class="string">"deleteByPrimaryKey"</span> parameterType=<span class="string">"java.lang.Integer"</span>&gt;</span><br><span class="line">    delete from teacher</span><br><span class="line">    where tid = #&#123;tid,jdbcType=INTEGER&#125;</span><br><span class="line">  &lt;/delete&gt;</span><br><span class="line">  &lt;insert id=<span class="string">"insert"</span> parameterType=<span class="string">"com.aiahtb.entity.Teacher"</span>&gt;</span><br><span class="line">    <span class="function">insert into <span class="title">teacher</span> <span class="params">(tid, `name`, age, </span></span></span><br><span class="line"><span class="function"><span class="params">      creat_time, update_time)</span></span></span><br><span class="line"><span class="function">    <span class="title">values</span> <span class="params">(#&#123;tid,jdbcType=INTEGER&#125;, #&#123;name,jdbcType=VARCHAR&#125;, #&#123;age,jdbcType=INTEGER&#125;, </span></span></span><br><span class="line"><span class="function"><span class="params">      #&#123;creatTime,jdbcType=TIMESTAMP&#125;, #&#123;updateTime,jdbcType=TIMESTAMP&#125;)</span></span></span><br><span class="line"><span class="function">  &lt;/insert&gt;</span></span><br><span class="line"><span class="function">  &lt;update id</span>=<span class="string">"updateByPrimaryKey"</span> parameterType=<span class="string">"com.aiahtb.entity.Teacher"</span>&gt;</span><br><span class="line">    update teacher</span><br><span class="line">    set `name` = #&#123;name,jdbcType=VARCHAR&#125;,</span><br><span class="line">      age = #&#123;age,jdbcType=INTEGER&#125;,</span><br><span class="line">      creat_time = #&#123;creatTime,jdbcType=TIMESTAMP&#125;,</span><br><span class="line">      update_time = #&#123;updateTime,jdbcType=TIMESTAMP&#125;</span><br><span class="line">    where tid = #&#123;tid,jdbcType=INTEGER&#125;</span><br><span class="line">  &lt;/update&gt;</span><br><span class="line">  &lt;select id=<span class="string">"selectByPrimaryKey"</span> parameterType=<span class="string">"java.lang.Integer"</span> resultMap=<span class="string">"BaseResultMap"</span>&gt;</span><br><span class="line">    select tid, `name`, age, creat_time, update_time</span><br><span class="line">    from teacher</span><br><span class="line">    where tid = #&#123;tid,jdbcType=INTEGER&#125;</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">  &lt;select id=<span class="string">"selectAll"</span> resultMap=<span class="string">"BaseResultMap"</span>&gt;</span><br><span class="line">    select tid, `name`, age, creat_time, update_time</span><br><span class="line">    from teacher</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Teacher1Mapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByPrimaryKey</span><span class="params">(Integer tid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(Teacher record)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Teacher <span class="title">selectByPrimaryKey</span><span class="params">(Integer tid)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Teacher&gt; <span class="title">selectAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateByPrimaryKey</span><span class="params">(Teacher record)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-数据源配置（重点）"><a href="#2-4-数据源配置（重点）" class="headerlink" title="2.4 数据源配置（重点）"></a>2.4 数据源配置（重点）</h2><p>数据源1的配置，千万要注意，单词过长，仔细仔细再仔细。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aiahtb.config.datasource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.jdbc.DataSourceBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Primary;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PathMatchingResourcePatternResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@MapperScan</span>：使用<span class="doctag">@MapperScan</span>来扫描注册mybatis数据库接口类， basePackages：表明接口类所在的包</span></span><br><span class="line"><span class="comment"> * sqlSessionTemplateRef：表明接口类使用的SqlSessionTemplate</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Primary</span>：在spring容器中，区别一个接口不同实现在属性注入时的先后顺序 详情：https://www.cnblogs.com/liaojie970/p/7885106.html</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">// 配置mybatis的接口类放的地方，使用扫描，mapper类上就不用添加@Mapper注解了</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.aiahtb.mapper.data1"</span>, sqlSessionTemplateRef = <span class="string">"test1SqlSessionTemplate"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatasourceConfig1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test1DataSource"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.test1"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">testDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test1SqlSessionFactory"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">testSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"test1DataSource"</span>)</span> DataSource dataSource) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(dataSource);</span><br><span class="line">        bean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(<span class="string">"classpath:mapper/data1/*.xml"</span>));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test1TransactionManager"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">testTransactionManager</span><span class="params">(@Qualifier(<span class="string">"test1DataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test1SqlSessionTemplate"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">testSqlSessionTemplate</span><span class="params">(@Qualifier(<span class="string">"test1SqlSessionFactory"</span>)</span> SqlSessionFactory sqlSessionFactory) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据源2的配置，千万要注意，单词过长，仔细仔细再仔细。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">// 配置mybatis的接口类放的地方</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.aiahtb.mapper.data2"</span>, sqlSessionTemplateRef = <span class="string">"test2SqlSessionTemplate"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DatasourceConfig2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test2DataSource"</span>)</span><br><span class="line">    <span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"spring.datasource.test2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">testDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DataSourceBuilder.create().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test2SqlSessionFactory"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionFactory <span class="title">testSqlSessionFactory</span><span class="params">(@Qualifier(<span class="string">"test2DataSource"</span>)</span> DataSource dataSource) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SqlSessionFactoryBean bean = <span class="keyword">new</span> SqlSessionFactoryBean();</span><br><span class="line">        bean.setDataSource(dataSource);</span><br><span class="line">        bean.setMapperLocations(<span class="keyword">new</span> PathMatchingResourcePatternResolver().getResources(<span class="string">"classpath:mapper/data2/*.xml"</span>));</span><br><span class="line">        <span class="keyword">return</span> bean.getObject();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test2TransactionManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSourceTransactionManager <span class="title">testTransactionManager</span><span class="params">(@Qualifier(<span class="string">"test2DataSource"</span>)</span> DataSource dataSource) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DataSourceTransactionManager(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"test2SqlSessionTemplate"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> SqlSessionTemplate <span class="title">testSqlSessionTemplate</span><span class="params">(@Qualifier(<span class="string">"test2SqlSessionFactory"</span>)</span> SqlSessionFactory sqlSessionFactory) <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SqlSessionTemplate(sqlSessionFactory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>使用测试类来测试一下。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_06.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span>(classes = Application.class) <span class="comment">// 指定引导类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(DemoApplicationTests.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Teacher1Mapper teacher1Mapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Teacher2Mapper teacher2Mapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试多数据源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moreDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"测试多数据源\n"</span>);</span><br><span class="line"></span><br><span class="line">        teacher1Mapper.selectAll().forEach(n -&gt; &#123;</span><br><span class="line">            System.out.println(n.toString());</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line">        teacher2Mapper.selectAll().forEach(n -&gt; &#123;</span><br><span class="line">            System.out.println(n.toString());</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试结果</strong><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191027/t_07.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>[参考文献]</strong><br>纯洁的微笑：<a href="http://www.ityouknow.com/springboot/2016/11/25/spring-boot-multi-mybatis.html" target="_blank" rel="noopener">http://www.ityouknow.com/springboot/2016/11/25/spring-boot-multi-mybatis.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>MyBatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot中generator整合lombox+中文注释</title>
    <link href="undefined2019/10/24/SpringBoot%E4%B8%ADgenerator%E6%95%B4%E5%90%88lombox-%E4%B8%AD%E6%96%87%E6%B3%A8%E9%87%8A/"/>
    <url>2019/10/24/SpringBoot%E4%B8%ADgenerator%E6%95%B4%E5%90%88lombox-%E4%B8%AD%E6%96%87%E6%B3%A8%E9%87%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="一、研究问题"><a href="#一、研究问题" class="headerlink" title="一、研究问题"></a>一、研究问题</h1><p>本文分享使用Mybatis的逆向工程generator的时候，将生成的实体改为lombox形式，并且在成员变量上添加数据库中的字段描述（中文的描述哦）。<br>本次环境是基于SpringBoot和MySQL，阅读前提是你先会使用原生的generator工具，如果你的环境是普通maven或其它环境也可以阅读，换汤不换药的。<br>这里先看下图效果：一张数据库表，student库下的class，如果是原生的generator工具生成的实体中会有很多set，get方法，而且成员变量上没有描述或是英文描述，而下面是已经修改过的效果。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="二、整合lombox"><a href="#二、整合lombox" class="headerlink" title="二、整合lombox"></a>二、整合lombox</h1><p>逆向工程是通过使用工具生成的代码，所以我们就修改他的工具源码，先解决第一个问题，将生成的实体类换成lombox形式。</p><h2 id="首先需要准备两个工程"><a href="#首先需要准备两个工程" class="headerlink" title="首先需要准备两个工程"></a>首先需要准备两个工程</h2><p>一个是原生的generator工程，测试使用它可以生成原来有set，get的实体，没有问题。下文称它为<strong>大工程</strong>，如何搭建原生generator的就不介绍了。<br>另一个是一个辅助工程，使用它来修改源码，不会添加在项目中。下方称它为<strong>小工程</strong>。</p><h2 id="2-1-创建小工程并修改源码"><a href="#2-1-创建小工程并修改源码" class="headerlink" title="2.1 创建小工程并修改源码"></a>2.1 创建小工程并修改源码</h2><h3 id="2-1-1-maven依赖"><a href="#2-1-1-maven依赖" class="headerlink" title="2.1.1 maven依赖"></a>2.1.1 maven依赖</h3><p>依赖如下，必要引入的有注释说明，其它不用较劲，这个<strong>小工程</strong>修改完源码就可以删除了的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">            &lt;exclusions&gt;</span><br><span class="line">                &lt;exclusion&gt;</span><br><span class="line">                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;</span><br><span class="line">                &lt;/exclusion&gt;</span><br><span class="line">            &lt;/exclusions&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 必须引入  生成的.class插件文件需放入里面--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="2-1-2-修改插件Plugin"><a href="#2-1-2-修改插件Plugin" class="headerlink" title="2.1.2 修改插件Plugin"></a>2.1.2 修改插件Plugin</h3><p>在小工程中，创建包org.mybatis.generator，然后在包下新建类继承PluginAdapter。<strong>包名不可以修改</strong>，类名可以修改。下面我自己定义的是LombokPlugin，可以直接复制以下代码。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package org.mybatis.generator.plugins;</span><br><span class="line"></span><br><span class="line">import org.mybatis.generator.api.IntrospectedColumn;</span><br><span class="line">import org.mybatis.generator.api.IntrospectedTable;</span><br><span class="line">import org.mybatis.generator.api.PluginAdapter;</span><br><span class="line">import org.mybatis.generator.api.dom.java.Interface;</span><br><span class="line">import org.mybatis.generator.api.dom.java.Method;</span><br><span class="line">import org.mybatis.generator.api.dom.java.TopLevelClass;</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class LombokPlugin extends PluginAdapter &#123;</span><br><span class="line">    public LombokPlugin() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean validate(List&lt;String&gt; list) &#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean modelBaseRecordClassGenerated(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        topLevelClass.addImportedType(&quot;lombok.Data&quot;);</span><br><span class="line">        topLevelClass.addAnnotation(&quot;@Data&quot;);</span><br><span class="line">        //topLevelClass.addImportedType(&quot;lombok.Getter&quot;);</span><br><span class="line">        //topLevelClass.addImportedType(&quot;lombok.Setter&quot;);</span><br><span class="line">        //topLevelClass.addImportedType(&quot;lombok.ToString&quot;);</span><br><span class="line">        //topLevelClass.addAnnotation(&quot;@Getter&quot;);</span><br><span class="line">        //topLevelClass.addAnnotation(&quot;@Setter&quot;);</span><br><span class="line">        //topLevelClass.addAnnotation(&quot;@ToString&quot;);</span><br><span class="line">        topLevelClass.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        topLevelClass.addJavaDocLine(&quot;* Created by Mybatis Generator &quot; + this.date2Str(new Date()));</span><br><span class="line">        topLevelClass.addJavaDocLine(&quot;*/&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean clientGenerated(Interface interfaze, TopLevelClass topLevelClass, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        interfaze.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        interfaze.addJavaDocLine(&quot;* Created by Mybatis Generator &quot; + this.date2Str(new Date()));</span><br><span class="line">        interfaze.addJavaDocLine(&quot;*/&quot;);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean modelSetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public boolean modelGetterMethodGenerated(Method method, TopLevelClass topLevelClass, IntrospectedColumn introspectedColumn, IntrospectedTable introspectedTable, ModelClassType modelClassType) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String date2Str(Date date) &#123;</span><br><span class="line">        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd&quot;);</span><br><span class="line">        return sdf.format(date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-1-3-将修改完的插件编译成-class文件"><a href="#2-1-3-将修改完的插件编译成-class文件" class="headerlink" title="2.1.3 将修改完的插件编译成.class文件"></a>2.1.3 将修改完的插件编译成.class文件</h3><p>先clean一下，清除缓存。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>然后点一下小工程修改的代码，让光标在修改了插件的那个类里闪烁。进行下一步。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="2-2-大工程修改"><a href="#2-2-大工程修改" class="headerlink" title="2.2 大工程修改"></a>2.2 大工程修改</h2><p>maven中必须引入mybatis-generator-core，因为你一会需要把这个.class替换。下面pom文件不用全复制，只需要在你的原生generator，也就是<strong>大工程</strong>中复制mybatis-generator-core和lombok即可，注意自己的mybatis-generator-core版本，我的是1.3.7。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">            &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">            &lt;exclusions&gt;</span><br><span class="line">                &lt;exclusion&gt;</span><br><span class="line">                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;</span><br><span class="line">                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;</span><br><span class="line">                &lt;/exclusion&gt;</span><br><span class="line">            &lt;/exclusions&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- 必须引入  生成的.class插件文件需放入里面--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;build&gt;</span><br><span class="line">        &lt;plugins&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">            &lt;plugin&gt;</span><br><span class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;1.3.7&lt;/version&gt;</span><br><span class="line">                &lt;executions&gt;</span><br><span class="line">                    &lt;execution&gt;</span><br><span class="line">                        &lt;id&gt;mybatis-generator&lt;/id&gt;</span><br><span class="line">                        &lt;phase&gt;deploy&lt;/phase&gt;</span><br><span class="line">                        &lt;goals&gt;</span><br><span class="line">                            &lt;goal&gt;generate&lt;/goal&gt;</span><br><span class="line">                        &lt;/goals&gt;</span><br><span class="line">                    &lt;/execution&gt;</span><br><span class="line">                &lt;/executions&gt;</span><br><span class="line">                &lt;configuration&gt;</span><br><span class="line">                    &lt;!-- generatorConfig.xml文件的位置，这个填写你自己的 --&gt;</span><br><span class="line">                    &lt;configurationFile&gt;src/main/resources/mybatis-generator/generatorConfig.xml&lt;/configurationFile&gt;</span><br><span class="line">                    &lt;verbose&gt;true&lt;/verbose&gt;</span><br><span class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</span><br><span class="line">                &lt;/configuration&gt;</span><br><span class="line">                &lt;dependencies&gt;</span><br><span class="line">                    &lt;dependency&gt;</span><br><span class="line">                        &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">                        &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">                        &lt;version&gt;8.0.17&lt;/version&gt;</span><br><span class="line">                    &lt;/dependency&gt;</span><br><span class="line">                &lt;/dependencies&gt;</span><br><span class="line">            &lt;/plugin&gt;</span><br><span class="line">        &lt;/plugins&gt;</span><br><span class="line">    &lt;/build&gt;</span><br></pre></td></tr></table></figure><h2 id="2-3-将2-1-3生成的-class替换"><a href="#2-3-将2-1-3生成的-class替换" class="headerlink" title="2.3 将2.1.3生成的.class替换"></a>2.3 将2.1.3生成的.class替换</h2><p>将自己生成的.class替换maven仓库中的插件。<br>在本地找到你生成的.class文件，ctrl+c复制<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_06.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>找到maven仓库的mybatis-generator-core，如下<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_07.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_08.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="2-4-最后修改一下大工程的generatorConfig-xml"><a href="#2-4-最后修改一下大工程的generatorConfig-xml" class="headerlink" title="2.4 最后修改一下大工程的generatorConfig.xml"></a>2.4 最后修改一下大工程的generatorConfig.xml</h2><p>context标签中添加你复制过来的插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin type=&quot;org.mybatis.generator.plugins.LombokPlugin&quot; &gt; &lt;property name=&quot;hasLombok&quot; value=&quot;true&quot;/&gt; &lt;/plugin&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_09.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="2-5-测试"><a href="#2-5-测试" class="headerlink" title="2.5 测试"></a>2.5 测试</h2><p>然后启动逆向生成，查看实体<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_10.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_11.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="三、添加中文注释"><a href="#三、添加中文注释" class="headerlink" title="三、添加中文注释"></a>三、添加中文注释</h1><h2 id="3-1-小工程修改源代码"><a href="#3-1-小工程修改源代码" class="headerlink" title="3.1 小工程修改源代码"></a>3.1 小工程修改源代码</h2><p>又回到<strong>小工程</strong>中修改源注释的源代码。在org.mybatis.generator.internal包下新建DefaultCommentGenerator实现CommentGenerator接口，<strong>包和类都不可以修改</strong>，可以直接复制以下代码。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_12.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br></pre></td><td class="code"><pre><span class="line">package org.mybatis.generator.internal;</span><br><span class="line"></span><br><span class="line">import org.mybatis.generator.api.CommentGenerator;</span><br><span class="line">import org.mybatis.generator.api.IntrospectedColumn;</span><br><span class="line">import org.mybatis.generator.api.IntrospectedTable;</span><br><span class="line">import org.mybatis.generator.api.dom.java.*;</span><br><span class="line">import org.mybatis.generator.api.dom.xml.XmlElement;</span><br><span class="line">import org.mybatis.generator.config.MergeConstants;</span><br><span class="line">import org.mybatis.generator.config.PropertyRegistry;</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.Properties;</span><br><span class="line">import java.util.Set;</span><br><span class="line"></span><br><span class="line">import static org.mybatis.generator.internal.util.StringUtility.isTrue;</span><br><span class="line"></span><br><span class="line">public class DefaultCommentGenerator implements CommentGenerator &#123;</span><br><span class="line">    private Properties properties;</span><br><span class="line">    private Properties systemPro;</span><br><span class="line">    private boolean suppressDate;</span><br><span class="line">    private boolean suppressAllComments;</span><br><span class="line">    private String currentDateStr;</span><br><span class="line"></span><br><span class="line">    public DefaultCommentGenerator() &#123;</span><br><span class="line">        super();</span><br><span class="line">        properties = new Properties();</span><br><span class="line">        systemPro = System.getProperties();</span><br><span class="line">        suppressDate = false;</span><br><span class="line">        suppressAllComments = false;</span><br><span class="line">        currentDateStr = (new SimpleDateFormat(&quot;yyyy-MM-dd&quot;)).format(new Date());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addJavaFileComment(CompilationUnit compilationUnit) &#123;</span><br><span class="line">        // add no file level comments by default</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Adds a suitable comment to warn users that the element was generated, and</span><br><span class="line">     * when it was generated.</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void addComment(XmlElement xmlElement) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addRootComment(XmlElement rootElement) &#123;</span><br><span class="line">        // add no document level comments by default</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addGeneralMethodAnnotation(Method method, IntrospectedTable introspectedTable,</span><br><span class="line">                                           Set&lt;FullyQualifiedJavaType&gt; set) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addGeneralMethodAnnotation(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn, Set&lt;FullyQualifiedJavaType&gt; set) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addFieldAnnotation(Field field, IntrospectedTable introspectedTable, Set&lt;FullyQualifiedJavaType&gt; set) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addFieldAnnotation(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn, Set&lt;FullyQualifiedJavaType&gt; set) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addClassAnnotation(InnerClass innerClass, IntrospectedTable introspectedTable, Set&lt;FullyQualifiedJavaType&gt; set) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addConfigurationProperties(Properties properties) &#123;</span><br><span class="line">        this.properties.putAll(properties);</span><br><span class="line"></span><br><span class="line">        suppressDate = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_DATE));</span><br><span class="line"></span><br><span class="line">        suppressAllComments = isTrue(properties.getProperty(PropertyRegistry.COMMENT_GENERATOR_SUPPRESS_ALL_COMMENTS));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * This method adds the custom javadoc tag for. You may do nothing if you do</span><br><span class="line">     * not wish to include the Javadoc tag - however, if you do not include the</span><br><span class="line">     * Javadoc tag then the Java merge capability of the eclipse plugin will</span><br><span class="line">     * break.</span><br><span class="line">     *</span><br><span class="line">     * @param javaElement the java element</span><br><span class="line">     */</span><br><span class="line">    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) &#123;</span><br><span class="line">        javaElement.addJavaDocLine(&quot; *&quot;);</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(MergeConstants.NEW_ELEMENT_TAG);</span><br><span class="line">        if (markAsDoNotDelete) &#123;</span><br><span class="line">            sb.append(&quot; do_not_delete_during_merge&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        String s = getDateString();</span><br><span class="line">        if (s != null) &#123;</span><br><span class="line">            sb.append(&apos; &apos;);</span><br><span class="line">            sb.append(s);</span><br><span class="line">        &#125;</span><br><span class="line">        javaElement.addJavaDocLine(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * This method returns a formated date string to include in the Javadoc tag</span><br><span class="line">     * and XML comments. You may return null if you do not want the date in</span><br><span class="line">     * these documentation elements.</span><br><span class="line">     *</span><br><span class="line">     * @return a string representing the current timestamp, or null</span><br><span class="line">     */</span><br><span class="line">    protected String getDateString() &#123;</span><br><span class="line">        String result = null;</span><br><span class="line">        if (!suppressDate) &#123;</span><br><span class="line">            result = currentDateStr;</span><br><span class="line">        &#125;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        innerClass.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedTable.getFullyQualifiedTable());</span><br><span class="line">        sb.append(&quot; &quot;);</span><br><span class="line">        sb.append(getDateString());</span><br><span class="line">        innerClass.addJavaDocLine(sb.toString());</span><br><span class="line">        innerClass.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line"></span><br><span class="line">        innerEnum.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        //      addJavadocTag(innerEnum, false);</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedTable.getFullyQualifiedTable());</span><br><span class="line">        innerEnum.addJavaDocLine(sb.toString());</span><br><span class="line">        innerEnum.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addFieldComment(Field field, IntrospectedTable introspectedTable,</span><br><span class="line">                                IntrospectedColumn introspectedColumn) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if (introspectedColumn.getRemarks() != null &amp;&amp; !introspectedColumn.getRemarks().trim().isEmpty()) &#123;</span><br><span class="line">            StringBuilder sb = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            field.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">            sb.append(&quot; * &quot;);</span><br><span class="line">            sb.append(introspectedColumn.getRemarks());</span><br><span class="line">            field.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">            //      addJavadocTag(field, false);</span><br><span class="line"></span><br><span class="line">            field.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addFieldComment(Field field, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line"></span><br><span class="line">        field.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedTable.getFullyQualifiedTable());</span><br><span class="line">        field.addJavaDocLine(sb.toString());</span><br><span class="line">        field.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        //      method.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        //      addJavadocTag(method, false);</span><br><span class="line">        //      method.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addGetterComment(Method method, IntrospectedTable introspectedTable,</span><br><span class="line">                                 IntrospectedColumn introspectedColumn) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        method.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedColumn.getRemarks());</span><br><span class="line">        method.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">        sb.setLength(0);</span><br><span class="line">        sb.append(&quot; * @return &quot;);</span><br><span class="line">        sb.append(introspectedColumn.getActualColumnName());</span><br><span class="line">        sb.append(&quot; &quot;);</span><br><span class="line">        sb.append(introspectedColumn.getRemarks());</span><br><span class="line">        method.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">        //      addJavadocTag(method, false);</span><br><span class="line"></span><br><span class="line">        method.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addSetterComment(Method method, IntrospectedTable introspectedTable,</span><br><span class="line">                                 IntrospectedColumn introspectedColumn) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        method.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedColumn.getRemarks());</span><br><span class="line">        method.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">        Parameter parm = method.getParameters().get(0);</span><br><span class="line">        sb.setLength(0);</span><br><span class="line">        sb.append(&quot; * @param &quot;);</span><br><span class="line">        sb.append(parm.getName());</span><br><span class="line">        sb.append(&quot; &quot;);</span><br><span class="line">        sb.append(introspectedColumn.getRemarks());</span><br><span class="line">        method.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">        //      addJavadocTag(method, false);</span><br><span class="line"></span><br><span class="line">        method.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) &#123;</span><br><span class="line">        if (suppressAllComments) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        StringBuilder sb = new StringBuilder();</span><br><span class="line"></span><br><span class="line">        innerClass.addJavaDocLine(&quot;/**&quot;);</span><br><span class="line">        sb.append(&quot; * &quot;);</span><br><span class="line">        sb.append(introspectedTable.getFullyQualifiedTable());</span><br><span class="line">        innerClass.addJavaDocLine(sb.toString());</span><br><span class="line"></span><br><span class="line">        sb.setLength(0);</span><br><span class="line">        sb.append(&quot; * @author &quot;);</span><br><span class="line">        sb.append(systemPro.getProperty(&quot;user.name&quot;));</span><br><span class="line">        sb.append(&quot; &quot;);</span><br><span class="line">        sb.append(currentDateStr);</span><br><span class="line"></span><br><span class="line">        //      addJavadocTag(innerClass, markAsDoNotDelete);</span><br><span class="line"></span><br><span class="line">        innerClass.addJavaDocLine(&quot; */&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-同样将它编译成-class文件"><a href="#3-2-同样将它编译成-class文件" class="headerlink" title="3.2 同样将它编译成.class文件"></a>3.2 同样将它编译成.class文件</h2><p>先clean，清空target。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_13.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_14.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="3-3-替换掉maven仓库中的-class"><a href="#3-3-替换掉maven仓库中的-class" class="headerlink" title="3.3 替换掉maven仓库中的.class"></a>3.3 替换掉maven仓库中的.class</h2><p>同样找到你编译的.class文件，ctrl+c复制<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_15.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>找到maven的位置<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_16.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>使用压缩文件打开，ctrl+v粘贴，如果提示是否要替换，点击确定，全部替换。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_17.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="3-4-确保大工程中开启注释"><a href="#3-4-确保大工程中开启注释" class="headerlink" title="3.4 确保大工程中开启注释"></a>3.4 确保大工程中开启注释</h2><p>generatorConfig.xml配置文件开启注释<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_18.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="3-5-启动逆向工程测试"><a href="#3-5-启动逆向工程测试" class="headerlink" title="3.5 启动逆向工程测试"></a>3.5 启动逆向工程测试</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_19.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>生成实体类<br><img src="https://gitee.com/guaidonggua/image/raw/master/20191024/t_20.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>SpringBoot</tag>
      
      <tag>MyBatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一道简单的面试题</title>
    <link href="undefined2019/10/16/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <url>2019/10/16/%E4%B8%80%E9%81%93%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>请问下面程序输出是什么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class Jtest&#123;</span><br><span class="line">      public static void main(String[] args) &#123;</span><br><span class="line">            StringBuffer a=new StringBuffer (&quot;A&quot;); </span><br><span class="line">            StringBuffer b=new StringBuffer (&quot;B&quot;);</span><br><span class="line">            oper(a,b);</span><br><span class="line">            System.out.print(a+&quot;,&quot;+b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      static void oper(StringBuffer c,StringBuffer d)&#123;</span><br><span class="line">          c.append(&quot;B&quot;);   </span><br><span class="line">          d=c;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>答案：AB,B</p><h1 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/mine/void.png" srcset="/img/loading.gif" alt="图解"></p>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自我控制是最强者的本能</title>
    <link href="undefined2019/10/07/%E8%87%AA%E6%88%91%E6%8E%A7%E5%88%B6%E6%98%AF%E6%9C%80%E5%BC%BA%E8%80%85%E7%9A%84%E6%9C%AC%E8%83%BD/"/>
    <url>2019/10/07/%E8%87%AA%E6%88%91%E6%8E%A7%E5%88%B6%E6%98%AF%E6%9C%80%E5%BC%BA%E8%80%85%E7%9A%84%E6%9C%AC%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="自我控制是最强者的本能"><a href="#自我控制是最强者的本能" class="headerlink" title="自我控制是最强者的本能"></a>自我控制是最强者的本能</h1><h2 id="乐观向上"><a href="#乐观向上" class="headerlink" title="乐观向上"></a>乐观向上</h2><p>我是一只快乐的程序员，不管有多忙总会挤出时间做自己喜欢做的事。不抛弃，不放弃。</p><p>天赋，规定的是上限。</p><p>有梦想的人是幸福的，而为了梦想去努力，虽然没有达到却永远无怨无悔。<br><img src="https://gitee.com/guaidonggua/image/raw/master/mine/ai.jpg" srcset="/img/loading.gif" alt="这就是我"></p><h2 id="言出必行"><a href="#言出必行" class="headerlink" title="言出必行"></a>言出必行</h2><p>光知道是不够的，我们必须应用；光有愿望是不够的，我们还得做。<br><img src="https://gitee.com/guaidonggua/image/raw/master/mine/BruceLee.jpg" srcset="/img/loading.gif" alt="Bruce Lee"></p><h2 id="行成于思毁于随"><a href="#行成于思毁于随" class="headerlink" title="行成于思毁于随"></a>行成于思毁于随</h2><p>不能光知道”业精于勤荒于嬉“，思考也很重要。</p><p>比尔 盖茨：一个卓越的车床工可以要求比一个一般的车床工多拿数倍高的工资，但一个卓越的软件写手的价值会10000倍于一个普通的写手。</p>]]></content>
    
    
    
    <tags>
      
      <tag>其它</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue 移动端自适应</title>
    <link href="undefined2019/04/20/Vue-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94/"/>
    <url>2019/04/20/Vue-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%87%AA%E9%80%82%E5%BA%94/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在做移动端开发时，适应各种移动设备是开发人员必须要考虑的一点。客户们的喜好不同，有人喜欢屏幕大的气派、上档次，而另一部分比较低调、小点轻便。<br>所以如下，是没有做自适应时的案例，设备不同，样式。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>项目是 VUE 脚手架并引入了 MUSE-UI 组件库, 此处不用 flexible 在 util 中的配置是因为，它会影响到 MUSE-UI 的组件，从而使组件变得非常小。所以这里还是使用 rem 为单位，而是在需要自适应时，使用 rem, 不需要时 使用px。</p><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><h2 id="一、安装依赖"><a href="#一、安装依赖" class="headerlink" title="一、安装依赖"></a>一、安装依赖</h2><pre><code>1. npm i lib-flexible2. import &apos;lib-flexible&apos;  // main.js 中引入 </code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="二、使用-vs-code-快捷转换"><a href="#二、使用-vs-code-快捷转换" class="headerlink" title="二、使用 vs-code 快捷转换"></a>二、使用 vs-code 快捷转换</h2><h3 id="1-安装px-to-rem"><a href="#1-安装px-to-rem" class="headerlink" title="1. 安装px to rem,"></a>1. 安装px to rem,</h3><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="2-首选项中配置"><a href="#2-首选项中配置" class="headerlink" title="2. 首选项中配置"></a>2. 首选项中配置</h3><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h3><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_06.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="解决后的效果"><a href="#解决后的效果" class="headerlink" title="解决后的效果"></a>解决后的效果</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/c_07.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue 网页生成 PDF</title>
    <link href="undefined2019/04/20/Vue-%E7%BD%91%E9%A1%B5%E7%94%9F%E6%88%90-PDF/"/>
    <url>2019/04/20/Vue-%E7%BD%91%E9%A1%B5%E7%94%9F%E6%88%90-PDF/</url>
    
    <content type="html"><![CDATA[<h1 id="保存当前网页为PDF格式到本地"><a href="#保存当前网页为PDF格式到本地" class="headerlink" title="保存当前网页为PDF格式到本地"></a>保存当前网页为PDF格式到本地</h1><h1 id="一、安装依赖"><a href="#一、安装依赖" class="headerlink" title="一、安装依赖"></a>一、安装依赖</h1><pre><code>1. npm install --save html2canvas  // 作用是html转图片2. npm install jspdf --save  // 再将图片转为pdf</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/b_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="二、设置格式函数"><a href="#二、设置格式函数" class="headerlink" title="二、设置格式函数"></a>二、设置格式函数</h1><pre><code>import html2Canvas from &apos;html2canvas&apos;import JsPDF from &apos;jspdf&apos;export default{  install (Vue, options) {    Vue.prototype.getPdf = function (title) {      html2Canvas(document.querySelector(&apos;#pdfDom&apos;), {        allowTaint: true      }).then(function (canvas) {        let contentWidth = canvas.width        let contentHeight = canvas.height        let pageHeight = contentWidth / 592.28 * 841.89        let leftHeight = contentHeight        let position = 0        let imgWidth = 595.28        let imgHeight = 592.28 / contentWidth * contentHeight        let pageData = canvas.toDataURL(&apos;image/jpeg&apos;, 1.0)        let PDF = new JsPDF(&apos;&apos;, &apos;pt&apos;, &apos;a4&apos;)        if (leftHeight &lt; pageHeight) {          PDF.addImage(pageData, &apos;JPEG&apos;, 0, 0, imgWidth, imgHeight)        } else {          while (leftHeight &gt; 0) {            PDF.addImage(pageData, &apos;JPEG&apos;, 0, position, imgWidth, imgHeight)            leftHeight -= pageHeight            position -= 841.89            if (leftHeight &gt; 0) {              PDF.addPage()            }          }        }        PDF.save(title + &apos;.pdf&apos;)      }      )    }  }}</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/b_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="三、main-js引入"><a href="#三、main-js引入" class="headerlink" title="三、main.js引入"></a>三、main.js引入</h1><pre><code>import htmlToPdf from &apos;./htmlToPdf&apos;;Vue.use(htmlToPdf);</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/b_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="四、运用"><a href="#四、运用" class="headerlink" title="四、运用"></a>四、运用</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/b_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="五、遇到问题"><a href="#五、遇到问题" class="headerlink" title="五、遇到问题"></a>五、遇到问题</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/b_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>如图，在导出文件时，发现网络错误，可能是因为下载器不支持，首先换浏览器试一次，如果可以下载，则就是下载器不支持。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE打包后静态网页中图片路径出错</title>
    <link href="undefined2019/04/20/VUE%E6%89%93%E5%8C%85%E5%90%8E%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E4%B8%AD%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E5%87%BA%E9%94%99/"/>
    <url>2019/04/20/VUE%E6%89%93%E5%8C%85%E5%90%8E%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E4%B8%AD%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E5%87%BA%E9%94%99/</url>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>vue 项目在 npm run build 后打包成为静态网页，但是用浏览器打开时，发现有些图片展示不出来，再查看控制台，图片路径异常。这是因为打包后的静态网页使用图片时用的是相对路径，而不可以用绝对路径。<br><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/a_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>解决方案本人查看到两种，但它们都是修改配置，打包时使用相对路径。本人的问题是通过第二种方式解决的。</p><h2 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/a_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="第二种（已多次使用它解决）"><a href="#第二种（已多次使用它解决）" class="headerlink" title="第二种（已多次使用它解决）"></a>第二种（已多次使用它解决）</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190420/a_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信公众号支付</title>
    <link href="undefined2019/01/09/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98/"/>
    <url>2019/01/09/%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98/</url>
    
    <content type="html"><![CDATA[<p>历经三天的爬坑之路，一套完整的 JAVA 版 JSAPI 微信支付和大家分享。</p><p>首先看官方文档，其中虽有一点点小差错，但还是很重要，毕竟它是根。<br><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_1</a></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>公众号配置和申请商户申请省略，直接上功能</p><h2 id="一、首先下载官方提供的工具类demo"><a href="#一、首先下载官方提供的工具类demo" class="headerlink" title="一、首先下载官方提供的工具类demo"></a>一、首先下载官方提供的工具类demo</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="二、把这些工具类Copy到自己的项目中"><a href="#二、把这些工具类Copy到自己的项目中" class="headerlink" title="二、把这些工具类Copy到自己的项目中"></a>二、把这些工具类Copy到自己的项目中</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p> 统一下单 —》 H5调起微信支付 —》 回调参数<br> 场景案例：充值话费流量</p><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>场景介绍：<br>    1）点击套餐时，统一下单；<br>    2）下单完成后返回参数给H5页面做为调用微信支付页面的数据；<br>    3）然后跳转到你的微信支付界面(输入密码界面)；<br>    4）输入密码支付成功；<br>    5）回调信息用做通知。</p><h1 id="一、前台"><a href="#一、前台" class="headerlink" title="一、前台"></a>一、前台</h1><pre><code>// 跳转微信支付(单击套餐时)onBridgeReady() {    // 【1】首先调用后台，统一下单 【对应后台下单方法，在后文有定义】    this.util.postRequest(&apos;/wx/unifiedOrder&apos;,{}).then(response =&gt; {        // 返回信息        let data = response.data.result;        // 【2】如果下单成功        if(data.return_code === &apos;SUCCESS&apos;) {            // 调起支付(此处是自定义工具中封装)            this.util.onBridgeReady(data);        }    });}/**  * 调用微信支付(工具js中)  */ static onBridgeReady(params) {   // 判断对象是否存在   if (typeof WeixinJSBridge == &quot;undefined&quot;){     if( document.addEventListener ){       document.addEventListener(&apos;WeixinJSBridgeReady&apos;, onBridgeReady, false);     }else if (document.attachEvent){       document.attachEvent(&apos;WeixinJSBridgeReady&apos;, onBridgeReady);        document.attachEvent(&apos;onWeixinJSBridgeReady&apos;, onBridgeReady);     }   }else{     // 【主要功能】在微信手机端浏览器      // 下单时返回的数据，传入后台用做支付使用     var param = { &quot;appId&quot;:params.appid, &quot;package&quot;:&quot;prepay_id=&quot;+params.prepay_id };     // 【1】ajax调用后台，使参数添加完整 【对应后台方法后文有定义】     this.postRequest(&quot;/wx/goH5Pay&quot;, param).then(response =&gt; {       // 整理完的参数       let data = response.data.result;       // 【2】参数传入，微信中H5页面调起支付       WeixinJSBridge.invoke(         &apos;getBrandWCPayRequest&apos;, {             &quot;appId&quot;: data.appId, // 公众号名称，由商户传入                  &quot;timeStamp&quot;: data.timeStamp, // 时间戳，自1970年以来的秒数 (10位)              &quot;nonceStr&quot;: data.nonceStr, // 随机串                  &quot;package&quot;: data.package, // 统一下单接口返回的prepay_id参数值，提交格式如prepay_id=***               &quot;signType&quot;: data.signType, // 微信签名方式类型             &quot;paySign&quot;: data.paySign, //微信签名          },         res =&gt; {           if(res.err_msg == &quot;get_brand_wcpay_request:ok&quot; ){               //使用以上方式判断前端返回,微信团队郑重提示：             //res.err_msg将在用户支付成功后返回ok，但并不保证它绝对可靠。             // 如果成功跳转微信支付页面         }        });     });   } }</code></pre><h1 id="二、后台"><a href="#二、后台" class="headerlink" title="二、后台"></a>二、后台</h1><h2 id="1-统一下单"><a href="#1-统一下单" class="headerlink" title="1.统一下单"></a>1.统一下单</h2><h4 id="（1）配置-MyConfig-继承工具抽象类-WXPayConfig"><a href="#（1）配置-MyConfig-继承工具抽象类-WXPayConfig" class="headerlink" title="（1）配置 MyConfig 继承工具抽象类 WXPayConfig"></a>（1）配置 MyConfig 继承工具抽象类 WXPayConfig</h4><pre><code>package com.mesunday.util.pay;import java.io.*;/** * 自定义配置 */public class MyConfig extends WXPayConfig{    private byte[] certData;    /**     * 构造方法读取证书, 通过getCertStream 可以使sdk获取到证书     * @throws Exception     */    public MyConfig() throws Exception {            // 【必填】此处为你申请的证书存放的路径        String certPath = &quot;D:\\cert\\apiclient_cert.p12&quot;;          File file = new File(certPath);        InputStream certStream = new FileInputStream(file);        this.certData = new byte[(int) file.length()];        certStream.read(this.certData);        certStream.close();    }    // 【必填】个人公众号的appid (此处为假数据)    public String getAppID() { return &quot;wx81107deaedd12&quot;; }    // 【必填】个人申请的商户号 (此处为假数据)    public String getMchID() { return &quot;1536399165&quot;; }    // 【必填】个人商户的API密钥 (此处为假数据)    public String getKey() { return &quot;c439h20196b286876b769fd196b2190k&quot;; }    public InputStream getCertStream() {        ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);        return certBis;    }    public int getHttpConnectTimeoutMs() {        return 8000;    }    public int getHttpReadTimeoutMs() {        return 10000;    }    /**     * 【必須實現此方法,否則無法使用】     * @return     */    public IWXPayDomain getWXPayDomain() {        IWXPayDomain iwxPayDomain = new IWXPayDomain() {            @Override            public void report(String domain, long elapsedTimeMillis, Exception ex) {}            @Override            public DomainInfo getDomain(WXPayConfig config) {                return new IWXPayDomain.DomainInfo(WXPayConstants.DOMAIN_API, true);            }        };        return iwxPayDomain;    }}</code></pre><h4 id="2-统一下单"><a href="#2-统一下单" class="headerlink" title="(2)统一下单"></a>(2)统一下单</h4><pre><code>/**  * 【统一下单】(正是前台调用的统一下单接口）  * controller省略，此处是service  * @return  */ public Map unifiedOrder() throws Exception {     // 返回信息给前台     Map&lt;String, String&gt; resp = new DataRow&lt;&gt;();     // 自定义的配置用于实现     MyConfig myConfig = new MyConfig();     WXPay wxpay = new WXPay(myConfig);     // 商戶訂單號     String outTradeNo = WXPayUtil.generateNonceStr();     // 添加 map data 数据，对应官方请求参数列表     // 官方：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1     DataRow&lt;String, String&gt; mapData = new DataRow();     mapData.put(&quot;appid&quot;, projectprops.getAppid()); // 公众APPid     mapData.put(&quot;mch_id&quot;, &quot;1536399165&quot;); // 商户号     mapData.put(&quot;nonce_str&quot;, WXPayUtil.generateNonceStr()); // 随机字符串32位(工具方法)     mapData.put(&quot;body&quot;,&quot;话费流量支付&quot;); // 商品描述     mapData.put(&quot;out_trade_no&quot;, outTradeNo); // 商户订单号     mapData.put(&quot;total_fee&quot;,&quot;1&quot;); // 标价金额(單位分)     mapData.put(&quot;spbill_create_ip&quot;,&quot;120.56.220.18&quot;); // 终端IP，公众平台白名单     mapData.put(&quot;notify_url&quot;, &quot;http://&quot; + projectprops.getDomainurl() + &quot;/api/wx/dealOrder/&quot;+outTradeNo); // 通知地址，支付成功时回调的参数(外网可以访问)，这里把订单号传过去     mapData.put(&quot;trade_type&quot;,&quot;JSAPI&quot;); // 交易类型     mapData.put(&quot;openid&quot;, &quot;ouAmpjl9ZZdSiMNYazgz7Ah8zqw4&quot;); // openid【必填，官方未说明必填】     // 签名需要其它数据信息，最后设置     String sign = WXPayUtil.generateSignature(mapData, &quot;c439h20196b286876b769fd196b2190k&quot;);     mapData.put(&quot;sign&quot;, sign); // 签名     // 调用统一下单     try {         resp = wxpay.unifiedOrder(mapData);         System.out.println(resp);     } catch (Exception e) {         e.printStackTrace();     }     return resp; }</code></pre><p>下单成功后返回的信息，前台取到需要的参数<img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_05.png" srcset="/img/loading.gif" alt="下单成功返回数据"></p><h2 id="2-H5调用微信端支付"><a href="#2-H5调用微信端支付" class="headerlink" title="2.H5调用微信端支付"></a>2.H5调用微信端支付</h2><p>其中参数犹为重要，所以这里在后台生成，同时参考官方参数列表<br><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6</a></p><pre><code>/** * H5支付时需要的参数 * @return * @throws Exception */public DataRow goH5Pay(DataRow data) throws Exception {    DataRow&lt;String, String&gt; param = new DataRow();    param.put(&quot;appId&quot;, data.getString(&quot;appId&quot;)); // 公众号名称，这里是由前台传过来    param.put(&quot;nonceStr&quot;, WXPayUtil.generateNonceStr()); // 随机串(工具生成)    param.put(&quot;package&quot;, data.getString(&quot;package&quot;)); // 统一下单返回的prepay_id，注意官方格式，这里也是由前台传过来    param.put(&quot;signType&quot;, &quot;MD5&quot;); // 微信签名方式    param.put(&quot;timeStamp&quot;, String.valueOf(WXPayUtil.getCurrentTimestamp())); // 时间戳，单位秒(10位)    // 签名需要其它数据信息，最后设置    String sign = WXPayUtil.generateSignature(param, &quot;c439h20196b286876b769fd196b2190k&quot;);    param.put(&quot;paySign&quot;, sign); // 签名    // 输出参数示例    for(Map.Entry&lt;String,String&gt; p : param.entrySet()) {        System.out.println(p.getKey() + &quot; : &quot; + p.getValue());    }    return param;}</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_06.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>在添加参数后调用微信支付，如果正常跳到微信支付，则跳过此处。<br>如果有异常，不能跳转微信支付页面，即官方给的返回为，前台可以用 alert() 输出JSON格式查看错误信息<br>get_brand_wcpay_request:fail —— 支付失败</p><h5 id="异常两种情况：如下"><a href="#异常两种情况：如下" class="headerlink" title="异常两种情况：如下"></a>异常两种情况：如下</h5><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_07.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>出现图 a：<br>（1）首先对照自己参数是否真的有问题，主要是签名，使用微信平台测试工具<br>         <a href="https://pay.weixin.qq.com/wiki/tools/signverify/" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/tools/signverify/</a><br>（2）自己生成的签名和官方的明明一样，还是报签名错误，此时做以下修改工具代码<br><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_08.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>出现图b：<br>是商户平台上，你当前的H5页面的URL支付目录未授权，所以配置，如下图<br><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_09.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="如果微信跳转成功如下"><a href="#如果微信跳转成功如下" class="headerlink" title="如果微信跳转成功如下"></a>如果微信跳转成功如下</h2><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_10.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="3-支付完成会通知，下单时设置的通知路由"><a href="#3-支付完成会通知，下单时设置的通知路由" class="headerlink" title="3.支付完成会通知，下单时设置的通知路由"></a>3.支付完成会通知，下单时设置的通知路由</h2><p>这里通知路由查询订单，如下</p><pre><code>/**  * 支付成功回調,查询订单信息  * @param outTradeNo 商戶訂單號【下单时传入的订单号】  * @return  */ @RequestMapping(value = &quot;/dealOrder/{outTradeNo:.+}&quot;) @ResponseBody public String goH5Pay(@PathVariable String outTradeNo) {     logger.debug(&quot;支付处理&quot;);     try {         // 自定义配置         MyConfig myConfig = new MyConfig();         WXPay wxpay = new WXPay(myConfig);         // 加入商戶訂單號         Map&lt;String, String&gt; data = new HashMap();         data.put(&quot;out_trade_no&quot;, outTradeNo);         // 查詢訂單         Map&lt;String, String&gt; resp = wxpay.orderQuery(data);         // 控制台输出，查看数据，如下图【【结合官方文档查看参数含义】】         for(Map.Entry&lt;String,String&gt; p : resp.entrySet()) {             System.out.println(p.getKey() + &quot; : &quot; + p.getValue());         }     } catch (Exception e) {     }     return ResultUtil.resultJsonString(&quot;null&quot;); }</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20190109/a_11.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="其它方法退款查询、下账单查询，与上图账单查询道理相同"><a href="#其它方法退款查询、下账单查询，与上图账单查询道理相同" class="headerlink" title="其它方法退款查询、下账单查询，与上图账单查询道理相同"></a>其它方法退款查询、下账单查询，与上图账单查询道理相同</h2><p>至此，微信支付完成，如有不对之处，希望读者评论提醒</p>]]></content>
    
    
    
    <tags>
      
      <tag>微信</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue使用wx-sdk图片上传</title>
    <link href="undefined2018/11/17/Vue%E4%BD%BF%E7%94%A8wx-sdk%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    <url>2018/11/17/Vue%E4%BD%BF%E7%94%A8wx-sdk%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<p>此篇只讲述vue前台上传图片。<br>如果vue项目中还没有装weixin-js-sdk，先安装</p><pre><code>npm install weixin-js-sdk</code></pre><p>然后在页面中引入：</p><pre><code>import wx from &apos;weixin-js-sdk&apos;;</code></pre><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181117/a_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>图片部分代码：</strong></p><pre><code>&lt;div class=&quot;photoBox&quot;&gt;       &lt;img v-for=&quot;url in imgUrls&quot; class=&quot;photo&quot; :src=&quot;url&quot; alt=&quot;&quot;&gt;       &lt;img class=&quot;photo&quot; src=&quot;../../img/photo/camera_02.png&quot; alt=&quot;&quot; @click=&quot;chooseWXImage()&quot;&gt;&lt;/div&gt;</code></pre><p><strong>参考data中定义了几个变量供使用</strong></p><pre><code>export default {  data() {    return {      // 接收本地图片id集      imgUrls: [],      // 返回的服务器id集      serverIds: [],      // 用于传参使用      jsconfig: {        aaurl: &quot;&quot;,  // 正在访问的前台url地址        token: &quot;&quot;   // 之前已经获取到的token      }    };  },}</code></pre><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="一、首先：初始化wx接口配置"><a href="#一、首先：初始化wx接口配置" class="headerlink" title="一、首先：初始化wx接口配置"></a>一、首先：初始化wx接口配置</h2><p>正如上面定义的jsconfig中, 通过异步把 <strong>url地址</strong> 和 <strong>token</strong> 传给后台让后台做初始化，<strong>url地址</strong> 和 <strong>token</strong> 都上一步后台传过来的，或是其它获取渠道；<br>之后会传回来一些数据，也就是下面代码的 wx.config 中的 data.xx ,如果你的wx.config  中的 debug 是 true 开启调试模式的话，用微信访问初始化成功会返回如图：<br><img src="https://gitee.com/guaidonggua/image/raw/master/20181117/a_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><pre><code>this.postRequest(&quot;/weixin/initWXConfig&quot;, jsconfig).then(      response =&gt; {        let data = response.data.result;        wx.config({          debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。          appId: data.appId, // 必填，企业号的唯一标识，此处填写企业号corpid          timestamp: data.timestamp, // 必填，生成签名的时间戳          nonceStr: data.nonceStr, // 必填，生成签名的随机串          signature: data.signature, // 必填，签名，见附录1          jsApiList: [ // 必填，需要使用的JS接口列表，            &quot;chooseImage&quot;,   // 选择图片            &quot;uploadImage&quot;,   // 上传至微信服务器，会保存3天            &quot;downloadImage&quot;  // 下载图片          ]         });        wx.error(function (res) {          alert(res);        });      },      response =&gt; {        console.log(&quot;请求失败了!!!!&quot;);        alert(&quot;请求失败了!!!!&quot;);      }    );</code></pre><h2 id="二、单击相机图片，选择图片添加至图片序列"><a href="#二、单击相机图片，选择图片添加至图片序列" class="headerlink" title="二、单击相机图片，选择图片添加至图片序列"></a>二、单击相机图片，选择图片添加至图片序列</h2><p>单击后跳转到本地选择图片，也就是微信的添加图片，如果没有跳到，可能是初始错误，刚开始代码中的click对应以下 <strong>chooseWXImage()</strong> 方法：</p><pre><code>chooseWXImage() {    wx.chooseImage({      // 调用wx选择图片      count: 5, // 默认9, 我设置成5张，也可通过变量设置      sizeType: [&quot;original&quot;, &quot;compressed&quot;], // 可以指定是原图还是压缩图，默认二者都有      sourceType: [&quot;album&quot;, &quot;camera&quot;], // 可以指定来源是相册还是相机，默认二者都有      success: res =&gt; {        let localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片        localIds.forEach(li =&gt; {          this.imgUrls.push(li); // 示例中定义，的图片集合中接收到每个图片的src供页面展示        });      },      fail: err =&gt; {        alert(&quot;添加失败...&quot;);      }    });  }</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181117/a_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://gitee.com/guaidonggua/image/raw/master/20181117/a_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="完成上传"><a href="#完成上传" class="headerlink" title="完成上传"></a>完成上传</h2><p>单击完成创建，触发下面的 <strong>uploadWXImage()</strong> 方法，把图片上传到微信服务器，把返回来的serverIds通过异步传给后台，然后后台用此id到服务器上找到图片并下载到本地，或是其它操作<br><strong>此方法得到serverIds</strong><br>如图弹出返回数据则上传成功：<br><img src="https://gitee.com/guaidonggua/image/raw/master/20181117/a_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><pre><code>uploadWXImage() {    this.imgUrls.forEach(li =&gt; {  // 循环刚才的本地url一张张上传      wx.uploadImage({  // 调用微信上传图片        localId: li, // 需要上传的图片的本地ID，由chooseImage接口获得        isShowProgressTips: 1, // 默认为1，显示进度提示        success: res =&gt; {          let serverId = res.serverId;          this.serverIds[0]=serverId;  // 给data中定义的数组添加值，把它传到后台        },        fail: err =&gt; {          alert(&quot;创建失败...&quot;);        }      });    });  }</code></pre><p><strong>异步传serverIds省略</strong>。<br>到此上传图片完毕。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Vue</tag>
      
      <tag>微信</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows-RabbitMQ安装、配置</title>
    <link href="undefined2018/11/07/Windows-RabbitMQ%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE/"/>
    <url>2018/11/07/Windows-RabbitMQ%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>RebbitMQ消息队列（Message Queue，简称MQ）是企业级互联网架构的核心产品，服务于整个阿里巴巴集团已超过 13 年，经过阿里巴巴交易核心链路反复打磨与历年双十一购物狂欢节的严苛考验，是一个真正具备低延迟、高并发、高可用、高可靠，可支撑万亿级数据洪峰的分布式消息中间件。<br>更多：<a href="https://baike.baidu.com/item/rabbitmq/9372144?fr=aladdin" target="_blank" rel="noopener">百度百科</a></p><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><h2 id="1-首先安装Erlang"><a href="#1-首先安装Erlang" class="headerlink" title="1.首先安装Erlang"></a>1.首先安装Erlang</h2><p>RabbitMQ是一个在AMQP协议标准基础上完整的，可服用的企业消息系统。它遵循Mozilla Public License开源协议，采用 Erlang 实现的工业级的消息队列(MQ)服务器，Rabbit MQ 是建立在Erlang OTP平台上。所以可以先到<a href="http://www.erlang.org/downloads" target="_blank" rel="noopener">官网</a>下载安装erlang，全部按指示下一步即可。<br>或是其它下载安装方式，需要配置环境变量，查一下也好，没有则加上：<br>如图：ERLANG_HOME  ：F:\erl7.1(对应自己目录)<br><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_01.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="2-安装RabbitMQ"><a href="#2-安装RabbitMQ" class="headerlink" title="2.安装RabbitMQ"></a>2.安装RabbitMQ</h2><p><a href="http://www.rabbitmq.com/download.html" target="_blank" rel="noopener">官网</a>或其它方式下载安装RabbitMQ</p><h2 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h2><ol><li>管理员方式打开cmd窗口</li></ol><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_02.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p> <strong>a. 根据自己目录输入命令</strong></p><pre><code>我的已经配置过，所以返回信息可能不一样，不报错即可&quot;F:\javaInstall\rabbit\rabbitmq\rabbitmq_server-3.6.5\sbin\rabbitmq-plugins.bat&quot; enable rabbitmq_management不用运行下面这行   Plugin configuration unchanged.</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_03.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p> <strong>b. 创建用户给于权限</strong><br>注意进入安装文件的sbin目录下操作</p><pre><code>首先查看当前用户：`rabbitmqctl.bat list_users`</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_04.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>根据自己需求操作以下：</strong></p><pre><code>新增一个用户：`rabbitmqctl.bat add_user username password`   //username password是自定义的用户名和秘码</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_05.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><pre><code>发现新建用户【】中是空的，这是因为你没有给他分配角色，然后现有五个角色供你分配：     (1) 超级管理员(administrator)    可登陆管理控制台(启用management plugin的情况下)，可查看所有的信息，并且可以对用户，策略(policy)进行操作。     (2) 监控者(monitoring)    可登陆管理控制台(启用management plugin的情况下)，同时可以查看rabbitmq节点的相关信息(进程数，内存使用情况，磁盘使用情况等)      (3) 策略制定者(policymaker)    可登陆管理控制台(启用management plugin的情况下), 同时可以对policy进行管理。     (4) 普通管理者(management)    仅可登陆管理控制台(启用management plugin的情况下)，无法看到节点信息，也无法对策略进行管理。     (5) 其他的    无法登陆管理控制台，通常就是普通的生产者和消费者。    给他分配超级管理员        执行：rabbitmqctl.bat set_user_tags username administrator</code></pre><p><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_06.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>其它操作：</strong></p><pre><code>修改密码：rabbitmqctl 原密码 userName 新密码`删除用户：rabbitmqctl.bat delete_user 用户名</code></pre><h2 id="4-登录"><a href="#4-登录" class="headerlink" title="4.登录"></a>4.登录</h2><p>web打开： <a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672/</a><br>如果打不开参考： 或许是你没有执行第一步打开web权限，再执行一遍</p><pre><code>rabbitmq-plugins enable rabbitmq_management</code></pre><p>如果还未解决参考： <a href="https://blog.csdn.net/sxf359/article/details/78239382" target="_blank" rel="noopener">https://blog.csdn.net/sxf359/article/details/78239382</a><br>登录进去如下：<br><img src="https://gitee.com/guaidonggua/image/raw/master/20181107/a_07.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><a href="https://www.cnblogs.com/ericli-ericli/p/5902270.html" target="_blank" rel="noopener">https://www.cnblogs.com/ericli-ericli/p/5902270.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>RabbitMQ</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>